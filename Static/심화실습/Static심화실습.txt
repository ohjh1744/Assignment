디자인 패턴: 객체 지향 프로그래밍 설계를 할 때 자주 발생하는 문제들에 대해 재사용할 수 있도록 만들어 놓은 패턴들의 모음이다.
이미 만들어져 잘 되는 것을 활용하여 재사용함으로써 프로그램 최적화에 도움을 준다.
수많은 디자인 패턴들이 존재하고, 크게 생성 , 구조, 행위 패턴으로 분류된다.

싱글톤 패턴: 생성 패턴 중 하나로, 특정 클래스의 인스턴스는 하나임을 보장하고 어디서든 참조 할 수 있도록 하는 패턴이다.
장점으로 클래스의 인스턴스가 하나만 존재하므로 메모리 낭비를 방지할 수 있지만
단점으로는 많은 싱글톤 인스턴스에 의존하게 되면 클래스 간 결합도가 증가하여 의존성 역전 원칙에 위반할 수 있게 되며,
테스트하기 어려울 수 있다.